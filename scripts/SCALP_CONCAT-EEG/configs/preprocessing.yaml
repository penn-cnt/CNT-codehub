# This file defines preprocessing steps as well as their keyword arguments.
# By externalizing the order, we can use reproducable code and allow individuals to comprehend/change the preprocessing steps quickly.
# This file can be called in the main.py file. Alternatively, the main body of the script can query the user for steps, then generate a similar file to this one with user specified filename.

# Butterworth Filter
# scipy butterworth filter. More information can be found at: https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.butter.html
# Available keywords:
## step_nums: integer. Array defining which steps in the preprocessing pipeline this should be run.
## order: List of integers. The order of the filter. default=3
## freqs: List of integer arrays. The frequencies to perform the filter on in each step. 
## filter_type: List of strings. Type of filter. default='bandpass'
### Options: {‘lowpass’, ‘highpass’, ‘bandpass’, ‘bandstop’}

butterworth_filter:
  step_nums: [1,3]
  filter_types: ['bandstop','bandpass']
  freqs: [[1,3],[100,200]]
  order: [3,3]
  multithread: False


# Z Score Rejection
# Simple z-score rejection function. Either masks or interpolates over values that are outliers from the mean.
# Based on Chebychev Theorem.
# Available keywords:
## step_nums: integer. Array defining which steps in the preprocessing pipeline this should be run.
## window_size: List of integers. Number of data points before/after data point to draw from for distribution.
## z_threshold: List of floats. Number of standard deviations away from mean to create cut-off.
## method: List of strings. Options for how to handle outliers.
### Options: {‘mask’,'interp'}

z_score_rejection:
  step_nums: [2]
  window_size: [512]
  z_threshold: [5]
  method: ["interp"]
  multithread: False
